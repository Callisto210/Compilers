
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'EDEDD4F6B345CC5F7DF3D76BF9069AC9'
    
_lr_action_items = {'RETURN':([0,2,6,11,12,15,16,17,19,21,22,23,24,27,28,29,31,35,46,48,51,52,68,72,73,77,78,80,91,113,114,115,116,118,123,124,128,129,130,138,139,140,141,142,146,147,148,150,151,],[-3,4,-18,-20,-21,-23,-19,-2,4,-17,-16,-24,-4,-22,-6,-5,-15,-41,4,4,-39,-38,-25,-9,4,-37,-26,-27,-28,-40,-42,-43,-45,-8,4,4,-29,4,4,-34,-35,-36,-30,-32,4,4,-81,-31,-33,]),'WHILE':([0,2,6,11,12,15,16,17,19,21,22,23,24,27,28,29,31,35,46,48,51,52,68,72,73,77,78,80,91,113,114,115,116,118,123,124,128,129,130,138,139,140,141,142,146,147,148,150,151,],[-3,10,-18,-20,-21,-23,-19,-2,10,-17,-16,-24,-4,-22,-6,-5,-15,-41,10,10,-39,-38,-25,-9,10,-37,-26,-27,-28,-40,-42,-43,-45,-8,10,10,-29,10,10,-34,-35,-36,-30,-32,10,10,-81,-31,-33,]),'PRINT':([0,2,6,11,12,15,16,17,19,21,22,23,24,27,28,29,31,35,46,48,51,52,68,72,73,77,78,80,91,113,114,115,116,118,123,124,128,129,130,138,139,140,141,142,146,147,148,150,151,],[-3,9,-18,-20,-21,-23,-19,-2,9,-17,-16,-24,-4,-22,-6,-5,-15,-41,9,9,-39,-38,-25,-9,9,-37,-26,-27,-28,-40,-42,-43,-45,-8,9,9,-29,9,9,-34,-35,-36,-30,-32,9,9,-81,-31,-33,]),'NEQ':([3,5,7,8,13,18,20,25,33,37,38,41,44,83,84,85,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,122,126,127,137,],[-51,-48,-52,-47,-54,-50,-49,-53,69,-53,69,69,69,69,-74,-73,69,69,-66,None,-59,69,None,-65,-55,-57,-56,-58,69,None,None,None,None,69,69,69,-75,-76,69,]),'LE':([3,5,7,8,13,18,20,25,33,37,38,41,44,83,84,85,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,122,126,127,137,],[-51,-48,-52,-47,-54,-50,-49,-53,55,-53,55,55,55,55,-74,-73,55,55,-66,None,-59,55,None,-65,-55,-57,-56,-58,55,None,None,None,None,55,55,55,-75,-76,55,]),'%':([3,5,7,8,13,18,20,25,33,37,38,41,44,83,84,85,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,122,126,127,137,],[-51,-48,-52,-47,-54,-50,-49,-53,56,-53,56,56,56,56,-74,-73,56,56,56,56,-59,56,56,56,56,-57,56,-58,56,56,56,56,56,56,56,56,-75,-76,56,]),'&':([3,5,7,8,13,18,20,25,33,37,38,41,44,83,84,85,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,122,126,127,137,],[-51,-48,-52,-47,-54,-50,-49,-53,57,-53,57,57,57,57,-74,-73,57,57,-66,-71,-59,-61,-70,-65,-55,-57,-56,-58,57,-67,-69,-72,-68,57,57,57,-75,-76,57,]),')':([3,5,7,8,13,18,20,37,41,43,44,47,81,82,83,84,85,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,120,122,126,127,133,134,135,145,149,],[-51,-48,-52,-47,-54,-50,-49,-53,-80,84,85,-78,123,124,-46,-74,-73,-77,126,127,129,130,-63,-66,-71,-59,-61,-70,-65,-55,-57,-56,-58,-64,-67,-69,-72,-68,-60,-62,-83,-79,-75,-76,-82,143,-85,-86,-84,]),'(':([0,2,4,6,9,10,11,12,14,15,16,17,19,21,22,23,24,25,26,27,28,29,31,35,37,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,78,79,80,86,91,113,114,115,116,118,121,123,124,128,129,130,138,139,140,141,142,146,147,148,150,151,],[-3,14,14,-18,14,42,-20,-21,14,-23,-19,-2,14,-17,-16,-24,-4,47,50,-22,-6,-5,-15,-41,47,14,14,14,14,14,14,-39,-38,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-25,14,14,14,-9,14,120,-37,-26,14,-27,14,-28,-40,-42,-43,-45,-8,14,14,14,-29,14,14,-34,-35,-36,-30,-32,14,14,-81,-31,-33,]),'+':([3,5,7,8,13,18,20,25,33,37,38,41,44,83,84,85,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,122,126,127,137,],[-51,-48,-52,-47,-54,-50,-49,-53,60,-53,60,60,60,60,-74,-73,60,60,60,60,-59,60,60,60,-55,-57,-56,-58,60,60,60,60,60,60,60,60,-75,-76,60,]),'*':([3,5,7,8,13,18,20,25,33,37,38,41,44,83,84,85,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,122,126,127,137,],[-51,-48,-52,-47,-54,-50,-49,-53,61,-53,61,61,61,61,-74,-73,61,61,61,61,-59,61,61,61,61,-57,61,-58,61,61,61,61,61,61,61,61,-75,-76,61,]),'-':([3,5,7,8,13,18,20,25,33,37,38,41,44,83,84,85,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,122,126,127,137,],[-51,-48,-52,-47,-54,-50,-49,-53,62,-53,62,62,62,62,-74,-73,62,62,62,62,-59,62,62,62,-55,-57,-56,-58,62,62,62,62,62,62,62,62,-75,-76,62,]),',':([3,5,7,8,13,18,20,37,39,41,74,75,84,85,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,122,126,127,132,135,137,145,],[-51,-48,-52,-47,-54,-50,-49,-53,79,-80,-11,119,-74,-73,79,-63,-66,-71,-59,-61,-70,-65,-55,-57,-56,-58,-64,-67,-69,-72,-68,-60,-62,-79,-75,-76,-10,144,-12,-86,]),'/':([3,5,7,8,13,18,20,25,33,37,38,41,44,83,84,85,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,122,126,127,137,],[-51,-48,-52,-47,-54,-50,-49,-53,63,-53,63,63,63,63,-74,-73,63,63,63,63,-59,63,63,63,63,-57,63,-58,63,63,63,63,63,63,63,63,-75,-76,63,]),'UNTIL':([6,11,12,15,16,21,22,23,27,31,45,46,51,52,68,77,78,80,87,91,116,128,138,139,140,141,142,150,151,],[-18,-20,-21,-23,-19,-17,-16,-24,-22,-15,86,-14,-39,-38,-25,-37,-26,-27,-13,-28,-45,-29,-34,-35,-36,-30,-32,-31,-33,]),'INTEGER':([0,2,4,6,9,11,12,14,15,16,17,19,21,22,23,24,27,28,29,31,35,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,78,79,80,86,91,113,114,115,116,118,121,123,124,128,129,130,138,139,140,141,142,146,147,148,150,151,],[-3,18,18,-18,18,-20,-21,18,-23,-19,-2,18,-17,-16,-24,-4,-22,-6,-5,-15,-41,18,18,18,18,18,18,-39,-38,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-25,18,18,18,-9,18,-37,-26,18,-27,18,-28,-40,-42,-43,-45,-8,18,18,18,-29,18,18,-34,-35,-36,-30,-32,18,18,-81,-31,-33,]),';':([3,5,7,8,13,18,20,25,30,32,33,34,37,38,39,40,41,74,75,83,84,85,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,122,125,126,127,132,137,],[-51,-48,-52,-47,-54,-50,-49,-53,51,52,68,72,-53,77,78,80,-80,-11,118,-46,-74,-73,128,-63,-66,-71,-59,-61,-70,-65,-55,-57,-56,-58,-64,-67,-69,-72,-68,-60,-62,-79,140,-75,-76,-10,-12,]),'^':([3,5,7,8,13,18,20,25,33,37,38,41,44,83,84,85,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,122,126,127,137,],[-51,-48,-52,-47,-54,-50,-49,-53,71,-53,71,71,71,71,-74,-73,71,71,-66,-71,-59,-61,-70,-65,-55,-57,-56,-58,71,-67,-69,-72,-68,71,-62,71,-75,-76,71,]),'=':([25,76,131,],[49,121,121,]),'<':([3,5,7,8,13,18,20,25,33,37,38,41,44,83,84,85,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,122,126,127,137,],[-51,-48,-52,-47,-54,-50,-49,-53,58,-53,58,58,58,58,-74,-73,58,58,-66,None,-59,58,None,-65,-55,-57,-56,-58,58,None,None,None,None,58,58,58,-75,-76,58,]),'$end':([0,1,2,6,11,12,15,16,17,21,22,23,24,27,28,29,31,51,52,68,72,77,78,80,91,116,118,128,138,139,140,141,142,148,150,151,],[-3,0,-1,-18,-20,-21,-23,-19,-2,-17,-16,-24,-4,-22,-6,-5,-15,-39,-38,-25,-9,-37,-26,-27,-28,-45,-8,-29,-34,-35,-36,-30,-32,-81,-31,-33,]),'SHR':([3,5,7,8,13,18,20,25,33,37,38,41,44,83,84,85,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,122,126,127,137,],[-51,-48,-52,-47,-54,-50,-49,-53,54,-53,54,54,54,54,-74,-73,54,54,-66,54,-59,54,54,-65,-55,-57,-56,-58,54,54,54,54,54,54,54,54,-75,-76,54,]),'REPEAT':([0,2,6,11,12,15,16,17,19,21,22,23,24,27,28,29,31,35,46,48,51,52,68,72,73,77,78,80,91,113,114,115,116,118,123,124,128,129,130,138,139,140,141,142,146,147,148,150,151,],[-3,19,-18,-20,-21,-23,-19,-2,19,-17,-16,-24,-4,-22,-6,-5,-15,-41,19,19,-39,-38,-25,-9,19,-37,-26,-27,-28,-40,-42,-43,-45,-8,19,19,-29,19,19,-34,-35,-36,-30,-32,19,19,-81,-31,-33,]),'STRING':([0,2,4,6,9,11,12,14,15,16,17,19,21,22,23,24,27,28,29,31,35,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,78,79,80,86,91,113,114,115,116,118,121,123,124,128,129,130,138,139,140,141,142,146,147,148,150,151,],[-3,7,7,-18,7,-20,-21,7,-23,-19,-2,7,-17,-16,-24,-4,-22,-6,-5,-15,-41,7,7,7,7,7,7,-39,-38,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-25,7,7,7,-9,7,-37,-26,7,-27,7,-28,-40,-42,-43,-45,-8,7,7,7,-29,7,7,-34,-35,-36,-30,-32,7,7,-81,-31,-33,]),'ELSE':([6,11,12,15,16,21,22,23,27,31,51,52,68,77,78,80,91,116,128,138,139,140,141,142,150,151,],[-18,-20,-21,-23,-19,-17,-16,-24,-22,-15,-39,-38,-25,-37,-26,-27,-28,-45,-29,-34,-35,-36,146,147,-31,-33,]),'GE':([3,5,7,8,13,18,20,25,33,37,38,41,44,83,84,85,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,122,126,127,137,],[-51,-48,-52,-47,-54,-50,-49,-53,67,-53,67,67,67,67,-74,-73,67,67,-66,None,-59,67,None,-65,-55,-57,-56,-58,67,None,None,None,None,67,67,67,-75,-76,67,]),'EQ':([3,5,7,8,13,18,20,25,33,37,38,41,44,83,84,85,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,122,126,127,137,],[-51,-48,-52,-47,-54,-50,-49,-53,65,-53,65,65,65,65,-74,-73,65,65,-66,None,-59,65,None,-65,-55,-57,-56,-58,65,None,None,None,None,65,65,65,-75,-76,65,]),'ID':([0,2,4,6,9,11,12,14,15,16,17,19,21,22,23,24,27,28,29,31,35,36,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,78,79,80,86,91,113,114,115,116,117,118,119,121,123,124,128,129,130,136,138,139,140,141,142,146,147,148,150,151,],[-3,25,37,-18,37,-20,-21,37,-23,-19,-2,25,-17,-16,-24,-4,-22,-6,-5,-15,-41,76,37,25,37,25,37,37,-39,-38,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-25,37,37,37,-9,25,-37,-26,37,-27,37,-28,-40,-42,-43,-45,131,-8,131,37,25,25,-29,25,25,145,-34,-35,-36,-30,-32,25,25,-81,-31,-33,]),'IF':([0,2,6,11,12,15,16,17,19,21,22,23,24,27,28,29,31,35,46,48,51,52,68,72,73,77,78,80,91,113,114,115,116,118,123,124,128,129,130,138,139,140,141,142,146,147,148,150,151,],[-3,26,-18,-20,-21,-23,-19,-2,26,-17,-16,-24,-4,-22,-6,-5,-15,-41,26,26,-39,-38,-25,-9,26,-37,-26,-27,-28,-40,-42,-43,-45,-8,26,26,-29,26,26,-34,-35,-36,-30,-32,26,26,-81,-31,-33,]),'AND':([3,5,7,8,13,18,20,25,33,37,38,41,44,83,84,85,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,122,126,127,137,],[-51,-48,-52,-47,-54,-50,-49,-53,53,-53,53,53,53,53,-74,-73,53,-63,-66,-71,-59,-61,-70,-65,-55,-57,-56,-58,53,-67,-69,-72,-68,-60,-62,53,-75,-76,53,]),':':([25,],[48,]),'SHL':([3,5,7,8,13,18,20,25,33,37,38,41,44,83,84,85,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,122,126,127,137,],[-51,-48,-52,-47,-54,-50,-49,-53,59,-53,59,59,59,59,-74,-73,59,59,-66,59,-59,59,59,-65,-55,-57,-56,-58,59,59,59,59,59,59,59,59,-75,-76,59,]),'}':([6,11,12,15,16,21,22,23,27,31,35,51,52,68,72,73,77,78,80,91,113,114,115,116,118,128,138,139,140,141,142,150,151,],[-18,-20,-21,-23,-19,-17,-16,-24,-22,-15,-41,-39,-38,-25,-9,116,-37,-26,-27,-28,-40,-42,-43,-45,-8,-29,-34,-35,-36,-30,-32,-31,-33,]),'FLOAT':([0,2,4,6,9,11,12,14,15,16,17,19,21,22,23,24,27,28,29,31,35,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,78,79,80,86,91,113,114,115,116,118,121,123,124,128,129,130,138,139,140,141,142,146,147,148,150,151,],[-3,3,3,-18,3,-20,-21,3,-23,-19,-2,3,-17,-16,-24,-4,-22,-6,-5,-15,-41,3,3,3,3,3,3,-39,-38,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-25,3,3,3,-9,3,-37,-26,3,-27,3,-28,-40,-42,-43,-45,-8,3,3,3,-29,3,3,-34,-35,-36,-30,-32,3,3,-81,-31,-33,]),'|':([3,5,7,8,13,18,20,25,33,37,38,41,44,83,84,85,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,122,126,127,137,],[-51,-48,-52,-47,-54,-50,-49,-53,70,-53,70,70,70,70,-74,-73,70,70,-66,-71,-59,-61,-70,-65,-55,-57,-56,-58,70,-67,-69,-72,-68,-60,-62,70,-75,-76,70,]),'BREAK':([0,2,6,11,12,15,16,17,19,21,22,23,24,27,28,29,31,35,46,48,51,52,68,72,73,77,78,80,91,113,114,115,116,118,123,124,128,129,130,138,139,140,141,142,146,147,148,150,151,],[-3,30,-18,-20,-21,-23,-19,-2,30,-17,-16,-24,-4,-22,-6,-5,-15,-41,30,30,-39,-38,-25,-9,30,-37,-26,-27,-28,-40,-42,-43,-45,-8,30,30,-29,30,30,-34,-35,-36,-30,-32,30,30,-81,-31,-33,]),'CONTINUE':([0,2,6,11,12,15,16,17,19,21,22,23,24,27,28,29,31,35,46,48,51,52,68,72,73,77,78,80,91,113,114,115,116,118,123,124,128,129,130,138,139,140,141,142,146,147,148,150,151,],[-3,32,-18,-20,-21,-23,-19,-2,32,-17,-16,-24,-4,-22,-6,-5,-15,-41,32,32,-39,-38,-25,-9,32,-37,-26,-27,-28,-40,-42,-43,-45,-8,32,32,-29,32,32,-34,-35,-36,-30,-32,32,32,-81,-31,-33,]),'error':([0,2,6,9,11,12,14,15,16,17,21,22,23,24,27,28,29,31,35,42,47,50,51,52,68,72,73,77,78,80,91,113,114,115,116,118,128,138,139,140,141,142,148,150,151,],[-3,34,-18,40,-20,-21,43,-23,-19,-2,-17,-16,-24,-4,-22,-6,-5,-15,-41,82,90,94,-39,-38,-25,-9,34,-37,-26,-27,-28,-40,-42,-43,-45,-8,-29,-34,-35,-36,-30,-32,-81,-31,-33,]),'{':([0,2,6,11,12,15,16,17,19,21,22,23,24,27,28,29,31,35,46,48,51,52,68,72,73,77,78,80,91,113,114,115,116,118,123,124,128,129,130,138,139,140,141,142,143,146,147,148,150,151,],[-3,35,-18,-20,-21,-23,-19,-2,35,-17,-16,-24,-4,-22,-6,-5,-15,-41,35,35,-39,-38,-25,-9,35,-37,-26,-27,-28,-40,-42,-43,-45,-8,35,35,-29,35,35,-34,-35,-36,-30,-32,35,35,35,-81,-31,-33,]),'>':([3,5,7,8,13,18,20,25,33,37,38,41,44,83,84,85,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,122,126,127,137,],[-51,-48,-52,-47,-54,-50,-49,-53,66,-53,66,66,66,66,-74,-73,66,66,-66,None,-59,66,None,-65,-55,-57,-56,-58,66,None,None,None,None,66,66,66,-75,-76,66,]),'TYPE':([0,2,6,11,12,15,16,17,21,22,23,24,27,28,29,31,35,51,52,68,72,73,77,78,80,91,113,114,115,116,118,120,128,138,139,140,141,142,144,148,150,151,],[-3,36,-18,-20,-21,-23,-19,-2,-17,-16,-24,-4,-22,-6,-5,-15,-41,-39,-38,-25,-9,117,-37,-26,-27,-28,-40,-42,-43,-45,-8,136,-29,-34,-35,-36,-30,-32,136,-81,-31,-33,]),'OR':([3,5,7,8,13,18,20,25,33,37,38,41,44,83,84,85,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,122,126,127,137,],[-51,-48,-52,-47,-54,-50,-49,-53,64,-53,64,64,64,64,-74,-73,64,-63,-66,-71,-59,-61,-70,-65,-55,-57,-56,-58,-64,-67,-69,-72,-68,-60,-62,64,-75,-76,64,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr_list':([9,47,],[39,88,]),'float':([2,4,9,14,19,42,46,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,79,86,121,123,124,129,130,146,147,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'podprogramy':([0,],[2,]),'choice_instr':([2,19,46,48,73,123,124,129,130,146,147,],[6,6,6,6,6,6,6,6,6,6,6,]),'arg':([120,144,],[135,135,]),'repeat_instr':([2,19,46,48,73,123,124,129,130,146,147,],[11,11,11,11,11,11,11,11,11,11,11,]),'return_instr':([2,19,46,48,73,123,124,129,130,146,147,],[12,12,12,12,12,12,12,12,12,12,12,]),'const':([2,4,9,14,19,42,46,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,79,86,121,123,124,129,130,146,147,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'continue_instr':([2,19,46,48,73,123,124,129,130,146,147,],[15,15,15,15,15,15,15,15,15,15,15,]),'while_instr':([2,19,46,48,73,123,124,129,130,146,147,],[16,16,16,16,16,16,16,16,16,16,16,]),'init':([36,117,119,],[74,74,132,]),'program':([0,],[1,]),'podprogram':([2,],[17,]),'units':([35,],[73,]),'unit':([73,],[113,]),'string':([2,4,9,14,19,42,46,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,79,86,121,123,124,129,130,146,147,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'assignment':([2,19,46,48,73,123,124,129,130,146,147,],[21,21,21,21,21,21,21,21,21,21,21,]),'labeled_instr':([2,19,46,48,73,123,124,129,130,146,147,],[22,22,22,22,22,22,22,22,22,22,22,]),'compound_instr':([2,19,46,48,73,123,124,129,130,143,146,147,],[23,23,23,23,23,23,23,23,23,148,23,23,]),'inits':([36,117,],[75,75,]),'declaration':([2,73,],[24,114,]),'integer':([2,4,9,14,19,42,46,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,79,86,121,123,124,129,130,146,147,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'args_list':([120,144,],[133,149,]),'condition':([42,50,86,],[81,93,125,]),'instructions':([19,46,],[45,87,]),'expr_list_or_empty':([47,],[89,]),'break_instr':([2,19,46,48,73,123,124,129,130,146,147,],[27,27,27,27,27,27,27,27,27,27,27,]),'instruction':([2,19,46,48,73,123,124,129,130,146,147,],[28,46,46,91,115,138,139,141,142,150,151,]),'args_list_or_empty':([120,],[134,]),'fundef':([2,],[29,]),'print_instr':([2,19,46,48,73,123,124,129,130,146,147,],[31,31,31,31,31,31,31,31,31,31,31,]),'expression':([2,4,9,14,19,42,46,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,79,86,121,123,124,129,130,146,147,],[33,38,41,44,33,83,33,41,33,92,83,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,33,122,83,137,33,33,33,33,33,33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> podprogramy','program',1,'p_program','Cparser.py',37),
  ('podprogramy -> podprogramy podprogram','podprogramy',2,'p_podprogramy','Cparser.py',41),
  ('podprogramy -> <empty>','podprogramy',0,'p_podprogramy','Cparser.py',42),
  ('podprogram -> declaration','podprogram',1,'p_podprogram','Cparser.py',54),
  ('podprogram -> fundef','podprogram',1,'p_podprogram','Cparser.py',55),
  ('podprogram -> instruction','podprogram',1,'p_podprogram','Cparser.py',56),
  ('podprogram -> <empty>','podprogram',0,'p_podprogram','Cparser.py',57),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',61),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',62),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',71),
  ('inits -> init','inits',1,'p_inits','Cparser.py',72),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',83),
  ('instructions -> instruction instructions','instructions',2,'p_instructions','Cparser.py',89),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',90),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',102),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',103),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',104),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',105),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',106),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',107),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',108),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',109),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',110),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',111),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',112),
  ('print_instr -> PRINT expr_list ;','print_instr',3,'p_print_instr','Cparser.py',116),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',117),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',122),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',128),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',134),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',135),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',136),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',137),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',147),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',148),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',154),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',160),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',165),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',169),
  ('units -> units unit','units',2,'p_units','Cparser.py',179),
  ('units -> <empty>','units',0,'p_units','Cparser.py',180),
  ('unit -> declaration','unit',1,'p_unit','Cparser.py',192),
  ('unit -> instruction','unit',1,'p_unit','Cparser.py',193),
  ('unit -> <empty>','unit',0,'p_unit','Cparser.py',194),
  ('compound_instr -> { units }','compound_instr',3,'p_compound_instr','Cparser.py',200),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',207),
  ('const -> integer','const',1,'p_const','Cparser.py',211),
  ('const -> float','const',1,'p_const','Cparser.py',212),
  ('const -> string','const',1,'p_const','Cparser.py',213),
  ('integer -> INTEGER','integer',1,'p_integer','Cparser.py',217),
  ('float -> FLOAT','float',1,'p_float','Cparser.py',221),
  ('string -> STRING','string',1,'p_string','Cparser.py',225),
  ('expression -> ID','expression',1,'p_expression_id','Cparser.py',229),
  ('expression -> const','expression',1,'p_expression','Cparser.py',233),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',234),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',235),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',236),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',237),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',238),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',239),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',240),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',241),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',242),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',243),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',244),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',245),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',246),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',247),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',248),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',249),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',250),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',251),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',252),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',253),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',254),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',255),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',271),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',272),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',279),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',280),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',291),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',299),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',300),
  ('args_list -> arg , args_list','args_list',3,'p_args_list','Cparser.py',307),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',308),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',319),
]
